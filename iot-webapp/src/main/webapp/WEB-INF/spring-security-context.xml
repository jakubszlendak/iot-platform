<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/security
       http://www.springframework.org/schema/security/spring-security.xsd">

       <!--<import resource="user-database-context.xml"/>-->
       <import resource="classpath:services-context.xml"/>


       <!--<bean id="userDetailsService" class="com.jmssolutions.iot.services.UserAuthenticationDetailsServiceImpl"/>-->

       <security:http auto-config="true" use-expressions="true">
              <security:intercept-url pattern="/admin**" access="hasRole('ROLE_ADMIN')" />
              <!--<security:intercept-url pattern="/dashboard"-->
              <security:intercept-url pattern="/dashboard**" access="hasRole('ROLE_USER')"/>
              <security:access-denied-handler error-page="/403" />
              <security:form-login
                     login-page="/login"
                     default-target-url="/dashboard"
                     login-processing-url="/j_spring_security_check"
                     authentication-failure-url="/login?error"
                     username-parameter="username"
                     password-parameter="password" />
              <security:logout logout-success-url="/login?logout" logout-url="/j_spring_security_logout" />
              <security:csrf/>
       </security:http>

       <security:authentication-manager>
              <security:authentication-provider user-service-ref="userAuthenticationDetailsServiceImpl">
                     <!--<security:jdbc-user-service data-source-ref="userDataSource"-->
                                                 <!--users-by-username-query="SELECT username,password, enabled FROM user WHERE username=?"-->
                                                 <!--authorities-by-username-query="SELECT username, role-->
                                                                                <!--FROM (user JOIN user_role ON user.user_id=user_role.user_id)-->
                                                                                <!--JOIN role ON user_role.role_id=role.role_id-->
                                                                                <!--WHERE username=?" />-->
              </security:authentication-provider>
       </security:authentication-manager>

</beans>